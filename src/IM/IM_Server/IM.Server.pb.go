// Code generated by protoc-gen-go.
// source: IM.Server.proto
// DO NOT EDIT!

/*
Package IM_Server is a generated protocol buffer package.

It is generated from these files:
	IM.Server.proto

It has these top-level messages:
	IMStopReceivePacket
	IMValidateReq
	IMValidateRsp
	IMGetDeviceTokenReq
	IMGetDeviceTokenRsp
	IMRoleSet
	IMOnlineUserInfo
	IMMsgServInfo
	IMUserStatusUpdate
	IMUserCntUpdate
	IMServerKickUser
	IMServerPCLoginStatusNotify
	IMPushToUserReq
	IMPushToUserRsp
	IMGroupGetShieldReq
	IMGroupGetShieldRsp
	IMFileTransferReq
	IMFileTransferRsp
	IMFileServerIPReq
	IMFileServerIPRsp
	IMCheckPCOnlineOnly
*/
package IM_Server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import IM_BaseDefine "../IM_BaseDefine"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// db_proxy
type IMStopReceivePacket struct {
	// cmd id:   0x0702
	Result           *uint32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMStopReceivePacket) Reset()                    { *m = IMStopReceivePacket{} }
func (m *IMStopReceivePacket) String() string            { return proto.CompactTextString(m) }
func (*IMStopReceivePacket) ProtoMessage()               {}
func (*IMStopReceivePacket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IMStopReceivePacket) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// db_proxy
type IMValidateReq struct {
	// cmd id:	0x0703
	UserName         *string `protobuf:"bytes,1,req,name=user_name" json:"user_name,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	AttachData       []byte  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	ClientType       *uint32 `protobuf:"varint,21,opt,name=client_type" json:"client_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMValidateReq) Reset()                    { *m = IMValidateReq{} }
func (m *IMValidateReq) String() string            { return proto.CompactTextString(m) }
func (*IMValidateReq) ProtoMessage()               {}
func (*IMValidateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IMValidateReq) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *IMValidateReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *IMValidateReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

func (m *IMValidateReq) GetClientType() uint32 {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return 0
}

// db_proxy
type IMValidateRsp struct {
	// cmd id:	0x0704
	UserName         *string                 `protobuf:"bytes,1,req,name=user_name" json:"user_name,omitempty"`
	ResultCode       *uint32                 `protobuf:"varint,2,req,name=result_code" json:"result_code,omitempty"`
	ResultString     *string                 `protobuf:"bytes,3,opt,name=result_string" json:"result_string,omitempty"`
	UserInfo         *IM_BaseDefine.UserInfo `protobuf:"bytes,4,opt,name=user_info" json:"user_info,omitempty"`
	AttachData       []byte                  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *IMValidateRsp) Reset()                    { *m = IMValidateRsp{} }
func (m *IMValidateRsp) String() string            { return proto.CompactTextString(m) }
func (*IMValidateRsp) ProtoMessage()               {}
func (*IMValidateRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IMValidateRsp) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *IMValidateRsp) GetResultCode() uint32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *IMValidateRsp) GetResultString() string {
	if m != nil && m.ResultString != nil {
		return *m.ResultString
	}
	return ""
}

func (m *IMValidateRsp) GetUserInfo() *IM_BaseDefine.UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *IMValidateRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

// db_proxy
type IMGetDeviceTokenReq struct {
	// cmd id:	0x0705
	UserId           []uint32 `protobuf:"varint,1,rep,name=user_id" json:"user_id,omitempty"`
	AttachData       []byte   `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *IMGetDeviceTokenReq) Reset()                    { *m = IMGetDeviceTokenReq{} }
func (m *IMGetDeviceTokenReq) String() string            { return proto.CompactTextString(m) }
func (*IMGetDeviceTokenReq) ProtoMessage()               {}
func (*IMGetDeviceTokenReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *IMGetDeviceTokenReq) GetUserId() []uint32 {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *IMGetDeviceTokenReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

// db_proxy
type IMGetDeviceTokenRsp struct {
	// cmd id:	0x0706
	UserTokenInfo    []*IM_BaseDefine.UserTokenInfo `protobuf:"bytes,1,rep,name=user_token_info" json:"user_token_info,omitempty"`
	AttachData       []byte                         `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *IMGetDeviceTokenRsp) Reset()                    { *m = IMGetDeviceTokenRsp{} }
func (m *IMGetDeviceTokenRsp) String() string            { return proto.CompactTextString(m) }
func (*IMGetDeviceTokenRsp) ProtoMessage()               {}
func (*IMGetDeviceTokenRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *IMGetDeviceTokenRsp) GetUserTokenInfo() []*IM_BaseDefine.UserTokenInfo {
	if m != nil {
		return m.UserTokenInfo
	}
	return nil
}

func (m *IMGetDeviceTokenRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMRoleSet struct {
	// cmd id:	0x0707
	Master           *uint32 `protobuf:"varint,1,req,name=master" json:"master,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMRoleSet) Reset()                    { *m = IMRoleSet{} }
func (m *IMRoleSet) String() string            { return proto.CompactTextString(m) }
func (*IMRoleSet) ProtoMessage()               {}
func (*IMRoleSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *IMRoleSet) GetMaster() uint32 {
	if m != nil && m.Master != nil {
		return *m.Master
	}
	return 0
}

type IMOnlineUserInfo struct {
	// cmd id:	0x0708
	UserStatList     []*IM_BaseDefine.ServerUserStat `protobuf:"bytes,1,rep,name=user_stat_list" json:"user_stat_list,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *IMOnlineUserInfo) Reset()                    { *m = IMOnlineUserInfo{} }
func (m *IMOnlineUserInfo) String() string            { return proto.CompactTextString(m) }
func (*IMOnlineUserInfo) ProtoMessage()               {}
func (*IMOnlineUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *IMOnlineUserInfo) GetUserStatList() []*IM_BaseDefine.ServerUserStat {
	if m != nil {
		return m.UserStatList
	}
	return nil
}

type IMMsgServInfo struct {
	// cmd id:	0x0709
	Ip1              *string `protobuf:"bytes,1,req,name=ip1" json:"ip1,omitempty"`
	Ip2              *string `protobuf:"bytes,2,req,name=ip2" json:"ip2,omitempty"`
	Port             *uint32 `protobuf:"varint,3,req,name=port" json:"port,omitempty"`
	MaxConnCnt       *uint32 `protobuf:"varint,4,req,name=max_conn_cnt" json:"max_conn_cnt,omitempty"`
	CurConnCnt       *uint32 `protobuf:"varint,5,req,name=cur_conn_cnt" json:"cur_conn_cnt,omitempty"`
	HostName         *string `protobuf:"bytes,6,req,name=host_name" json:"host_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMMsgServInfo) Reset()                    { *m = IMMsgServInfo{} }
func (m *IMMsgServInfo) String() string            { return proto.CompactTextString(m) }
func (*IMMsgServInfo) ProtoMessage()               {}
func (*IMMsgServInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *IMMsgServInfo) GetIp1() string {
	if m != nil && m.Ip1 != nil {
		return *m.Ip1
	}
	return ""
}

func (m *IMMsgServInfo) GetIp2() string {
	if m != nil && m.Ip2 != nil {
		return *m.Ip2
	}
	return ""
}

func (m *IMMsgServInfo) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *IMMsgServInfo) GetMaxConnCnt() uint32 {
	if m != nil && m.MaxConnCnt != nil {
		return *m.MaxConnCnt
	}
	return 0
}

func (m *IMMsgServInfo) GetCurConnCnt() uint32 {
	if m != nil && m.CurConnCnt != nil {
		return *m.CurConnCnt
	}
	return 0
}

func (m *IMMsgServInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

type IMUserStatusUpdate struct {
	// cmd id:	0x070a
	UserStatus       *uint32                   `protobuf:"varint,1,req,name=user_status" json:"user_status,omitempty"`
	UserId           *uint32                   `protobuf:"varint,2,req,name=user_id" json:"user_id,omitempty"`
	ClientType       *IM_BaseDefine.ClientType `protobuf:"varint,3,req,name=client_type,enum=IM.BaseDefine.ClientType" json:"client_type,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *IMUserStatusUpdate) Reset()                    { *m = IMUserStatusUpdate{} }
func (m *IMUserStatusUpdate) String() string            { return proto.CompactTextString(m) }
func (*IMUserStatusUpdate) ProtoMessage()               {}
func (*IMUserStatusUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *IMUserStatusUpdate) GetUserStatus() uint32 {
	if m != nil && m.UserStatus != nil {
		return *m.UserStatus
	}
	return 0
}

func (m *IMUserStatusUpdate) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMUserStatusUpdate) GetClientType() IM_BaseDefine.ClientType {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return IM_BaseDefine.ClientType_CLIENT_TYPE_WINDOWS
}

type IMUserCntUpdate struct {
	// cmd id:	0x070b
	UserAction       *uint32 `protobuf:"varint,1,req,name=user_action" json:"user_action,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,req,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMUserCntUpdate) Reset()                    { *m = IMUserCntUpdate{} }
func (m *IMUserCntUpdate) String() string            { return proto.CompactTextString(m) }
func (*IMUserCntUpdate) ProtoMessage()               {}
func (*IMUserCntUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *IMUserCntUpdate) GetUserAction() uint32 {
	if m != nil && m.UserAction != nil {
		return *m.UserAction
	}
	return 0
}

func (m *IMUserCntUpdate) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type IMServerKickUser struct {
	// cmd id:	0x070d
	UserId           *uint32                   `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	ClientType       *IM_BaseDefine.ClientType `protobuf:"varint,2,req,name=client_type,enum=IM.BaseDefine.ClientType" json:"client_type,omitempty"`
	Reason           *uint32                   `protobuf:"varint,3,req,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *IMServerKickUser) Reset()                    { *m = IMServerKickUser{} }
func (m *IMServerKickUser) String() string            { return proto.CompactTextString(m) }
func (*IMServerKickUser) ProtoMessage()               {}
func (*IMServerKickUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *IMServerKickUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMServerKickUser) GetClientType() IM_BaseDefine.ClientType {
	if m != nil && m.ClientType != nil {
		return *m.ClientType
	}
	return IM_BaseDefine.ClientType_CLIENT_TYPE_WINDOWS
}

func (m *IMServerKickUser) GetReason() uint32 {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return 0
}

type IMServerPCLoginStatusNotify struct {
	// cmd id:	0x070e
	UserId           *uint32 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	LoginStatus      *uint32 `protobuf:"varint,2,req,name=login_status" json:"login_status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMServerPCLoginStatusNotify) Reset()                    { *m = IMServerPCLoginStatusNotify{} }
func (m *IMServerPCLoginStatusNotify) String() string            { return proto.CompactTextString(m) }
func (*IMServerPCLoginStatusNotify) ProtoMessage()               {}
func (*IMServerPCLoginStatusNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *IMServerPCLoginStatusNotify) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMServerPCLoginStatusNotify) GetLoginStatus() uint32 {
	if m != nil && m.LoginStatus != nil {
		return *m.LoginStatus
	}
	return 0
}

type IMPushToUserReq struct {
	// cmd id:	0x070f
	Flash            *string                        `protobuf:"bytes,1,req,name=flash" json:"flash,omitempty"`
	Data             *string                        `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	UserTokenList    []*IM_BaseDefine.UserTokenInfo `protobuf:"bytes,3,rep,name=user_token_list" json:"user_token_list,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *IMPushToUserReq) Reset()                    { *m = IMPushToUserReq{} }
func (m *IMPushToUserReq) String() string            { return proto.CompactTextString(m) }
func (*IMPushToUserReq) ProtoMessage()               {}
func (*IMPushToUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *IMPushToUserReq) GetFlash() string {
	if m != nil && m.Flash != nil {
		return *m.Flash
	}
	return ""
}

func (m *IMPushToUserReq) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func (m *IMPushToUserReq) GetUserTokenList() []*IM_BaseDefine.UserTokenInfo {
	if m != nil {
		return m.UserTokenList
	}
	return nil
}

type IMPushToUserRsp struct {
	// cmd id:	0x0710
	PushResultList   []*IM_BaseDefine.PushResult `protobuf:"bytes,1,rep,name=push_result_list" json:"push_result_list,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *IMPushToUserRsp) Reset()                    { *m = IMPushToUserRsp{} }
func (m *IMPushToUserRsp) String() string            { return proto.CompactTextString(m) }
func (*IMPushToUserRsp) ProtoMessage()               {}
func (*IMPushToUserRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *IMPushToUserRsp) GetPushResultList() []*IM_BaseDefine.PushResult {
	if m != nil {
		return m.PushResultList
	}
	return nil
}

type IMGroupGetShieldReq struct {
	// cmd id:			0x0711
	GroupId          *uint32  `protobuf:"varint,1,req,name=group_id" json:"group_id,omitempty"`
	UserId           []uint32 `protobuf:"varint,2,rep,name=user_id" json:"user_id,omitempty"`
	AttachData       []byte   `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *IMGroupGetShieldReq) Reset()                    { *m = IMGroupGetShieldReq{} }
func (m *IMGroupGetShieldReq) String() string            { return proto.CompactTextString(m) }
func (*IMGroupGetShieldReq) ProtoMessage()               {}
func (*IMGroupGetShieldReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *IMGroupGetShieldReq) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupGetShieldReq) GetUserId() []uint32 {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *IMGroupGetShieldReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupGetShieldRsp struct {
	// cmd id: 			0x0712
	GroupId          *uint32                       `protobuf:"varint,1,req,name=group_id" json:"group_id,omitempty"`
	ShieldStatusList []*IM_BaseDefine.ShieldStatus `protobuf:"bytes,2,rep,name=shield_status_list" json:"shield_status_list,omitempty"`
	AttachData       []byte                        `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *IMGroupGetShieldRsp) Reset()                    { *m = IMGroupGetShieldRsp{} }
func (m *IMGroupGetShieldRsp) String() string            { return proto.CompactTextString(m) }
func (*IMGroupGetShieldRsp) ProtoMessage()               {}
func (*IMGroupGetShieldRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *IMGroupGetShieldRsp) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupGetShieldRsp) GetShieldStatusList() []*IM_BaseDefine.ShieldStatus {
	if m != nil {
		return m.ShieldStatusList
	}
	return nil
}

func (m *IMGroupGetShieldRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMFileTransferReq struct {
	// cmd id:			0x0715
	FromUserId       *uint32                         `protobuf:"varint,1,req,name=from_user_id" json:"from_user_id,omitempty"`
	ToUserId         *uint32                         `protobuf:"varint,2,req,name=to_user_id" json:"to_user_id,omitempty"`
	FileName         *string                         `protobuf:"bytes,3,req,name=file_name" json:"file_name,omitempty"`
	FileSize         *uint32                         `protobuf:"varint,4,req,name=file_size" json:"file_size,omitempty"`
	TransMode        *IM_BaseDefine.TransferFileType `protobuf:"varint,5,req,name=trans_mode,enum=IM.BaseDefine.TransferFileType" json:"trans_mode,omitempty"`
	AttachData       []byte                          `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *IMFileTransferReq) Reset()                    { *m = IMFileTransferReq{} }
func (m *IMFileTransferReq) String() string            { return proto.CompactTextString(m) }
func (*IMFileTransferReq) ProtoMessage()               {}
func (*IMFileTransferReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *IMFileTransferReq) GetFromUserId() uint32 {
	if m != nil && m.FromUserId != nil {
		return *m.FromUserId
	}
	return 0
}

func (m *IMFileTransferReq) GetToUserId() uint32 {
	if m != nil && m.ToUserId != nil {
		return *m.ToUserId
	}
	return 0
}

func (m *IMFileTransferReq) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *IMFileTransferReq) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *IMFileTransferReq) GetTransMode() IM_BaseDefine.TransferFileType {
	if m != nil && m.TransMode != nil {
		return *m.TransMode
	}
	return IM_BaseDefine.TransferFileType_FILE_TYPE_ONLINE
}

func (m *IMFileTransferReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMFileTransferRsp struct {
	// cmd id:			0x0716
	ResultCode       *uint32                         `protobuf:"varint,1,req,name=result_code" json:"result_code,omitempty"`
	FromUserId       *uint32                         `protobuf:"varint,2,req,name=from_user_id" json:"from_user_id,omitempty"`
	ToUserId         *uint32                         `protobuf:"varint,3,req,name=to_user_id" json:"to_user_id,omitempty"`
	FileName         *string                         `protobuf:"bytes,4,opt,name=file_name" json:"file_name,omitempty"`
	FileSize         *uint32                         `protobuf:"varint,5,opt,name=file_size" json:"file_size,omitempty"`
	TaskId           *string                         `protobuf:"bytes,6,opt,name=task_id" json:"task_id,omitempty"`
	TransMode        *IM_BaseDefine.TransferFileType `protobuf:"varint,7,opt,name=trans_mode,enum=IM.BaseDefine.TransferFileType" json:"trans_mode,omitempty"`
	AttachData       []byte                          `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *IMFileTransferRsp) Reset()                    { *m = IMFileTransferRsp{} }
func (m *IMFileTransferRsp) String() string            { return proto.CompactTextString(m) }
func (*IMFileTransferRsp) ProtoMessage()               {}
func (*IMFileTransferRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *IMFileTransferRsp) GetResultCode() uint32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *IMFileTransferRsp) GetFromUserId() uint32 {
	if m != nil && m.FromUserId != nil {
		return *m.FromUserId
	}
	return 0
}

func (m *IMFileTransferRsp) GetToUserId() uint32 {
	if m != nil && m.ToUserId != nil {
		return *m.ToUserId
	}
	return 0
}

func (m *IMFileTransferRsp) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *IMFileTransferRsp) GetFileSize() uint32 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

func (m *IMFileTransferRsp) GetTaskId() string {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return ""
}

func (m *IMFileTransferRsp) GetTransMode() IM_BaseDefine.TransferFileType {
	if m != nil && m.TransMode != nil {
		return *m.TransMode
	}
	return IM_BaseDefine.TransferFileType_FILE_TYPE_ONLINE
}

func (m *IMFileTransferRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMFileServerIPReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *IMFileServerIPReq) Reset()                    { *m = IMFileServerIPReq{} }
func (m *IMFileServerIPReq) String() string            { return proto.CompactTextString(m) }
func (*IMFileServerIPReq) ProtoMessage()               {}
func (*IMFileServerIPReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type IMFileServerIPRsp struct {
	// cmd id:			0x0718
	IpAddrList       []*IM_BaseDefine.IpAddr `protobuf:"bytes,1,rep,name=ip_addr_list" json:"ip_addr_list,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *IMFileServerIPRsp) Reset()                    { *m = IMFileServerIPRsp{} }
func (m *IMFileServerIPRsp) String() string            { return proto.CompactTextString(m) }
func (*IMFileServerIPRsp) ProtoMessage()               {}
func (*IMFileServerIPRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *IMFileServerIPRsp) GetIpAddrList() []*IM_BaseDefine.IpAddr {
	if m != nil {
		return m.IpAddrList
	}
	return nil
}

type IMCheckPCOnlineOnly struct {
	// cmd id:           0x0719
	UserId           *uint32 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMCheckPCOnlineOnly) Reset()                    { *m = IMCheckPCOnlineOnly{} }
func (m *IMCheckPCOnlineOnly) String() string            { return proto.CompactTextString(m) }
func (*IMCheckPCOnlineOnly) ProtoMessage()               {}
func (*IMCheckPCOnlineOnly) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *IMCheckPCOnlineOnly) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func init() {
	proto.RegisterType((*IMStopReceivePacket)(nil), "IM.Server.IMStopReceivePacket")
	proto.RegisterType((*IMValidateReq)(nil), "IM.Server.IMValidateReq")
	proto.RegisterType((*IMValidateRsp)(nil), "IM.Server.IMValidateRsp")
	proto.RegisterType((*IMGetDeviceTokenReq)(nil), "IM.Server.IMGetDeviceTokenReq")
	proto.RegisterType((*IMGetDeviceTokenRsp)(nil), "IM.Server.IMGetDeviceTokenRsp")
	proto.RegisterType((*IMRoleSet)(nil), "IM.Server.IMRoleSet")
	proto.RegisterType((*IMOnlineUserInfo)(nil), "IM.Server.IMOnlineUserInfo")
	proto.RegisterType((*IMMsgServInfo)(nil), "IM.Server.IMMsgServInfo")
	proto.RegisterType((*IMUserStatusUpdate)(nil), "IM.Server.IMUserStatusUpdate")
	proto.RegisterType((*IMUserCntUpdate)(nil), "IM.Server.IMUserCntUpdate")
	proto.RegisterType((*IMServerKickUser)(nil), "IM.Server.IMServerKickUser")
	proto.RegisterType((*IMServerPCLoginStatusNotify)(nil), "IM.Server.IMServerPCLoginStatusNotify")
	proto.RegisterType((*IMPushToUserReq)(nil), "IM.Server.IMPushToUserReq")
	proto.RegisterType((*IMPushToUserRsp)(nil), "IM.Server.IMPushToUserRsp")
	proto.RegisterType((*IMGroupGetShieldReq)(nil), "IM.Server.IMGroupGetShieldReq")
	proto.RegisterType((*IMGroupGetShieldRsp)(nil), "IM.Server.IMGroupGetShieldRsp")
	proto.RegisterType((*IMFileTransferReq)(nil), "IM.Server.IMFileTransferReq")
	proto.RegisterType((*IMFileTransferRsp)(nil), "IM.Server.IMFileTransferRsp")
	proto.RegisterType((*IMFileServerIPReq)(nil), "IM.Server.IMFileServerIPReq")
	proto.RegisterType((*IMFileServerIPRsp)(nil), "IM.Server.IMFileServerIPRsp")
	proto.RegisterType((*IMCheckPCOnlineOnly)(nil), "IM.Server.IMCheckPCOnlineOnly")
}

func init() { proto.RegisterFile("IM.Server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 821 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0xed, 0x6e, 0xe3, 0x44,
	0x14, 0x95, 0x93, 0xb4, 0xbb, 0xb9, 0x49, 0xfa, 0xe1, 0xb4, 0xc2, 0x50, 0x10, 0x91, 0x25, 0x50,
	0x04, 0x52, 0x24, 0xba, 0x5a, 0xed, 0x0f, 0xfe, 0xc0, 0xa6, 0xda, 0xc5, 0x02, 0xb3, 0x51, 0xd2,
	0xe5, 0x27, 0xd6, 0xc8, 0xbe, 0x6e, 0x86, 0x38, 0x33, 0xb3, 0x33, 0xe3, 0x42, 0x79, 0x09, 0x9e,
	0x84, 0xa7, 0xe1, 0x85, 0xd0, 0xcc, 0x38, 0xdd, 0xda, 0x71, 0xb5, 0xd2, 0xfe, 0xec, 0xcd, 0xdc,
	0x7b, 0xce, 0xb9, 0xe7, 0x5c, 0x17, 0x8e, 0xa3, 0x78, 0xb6, 0x42, 0x79, 0x8b, 0x72, 0x26, 0x24,
	0xd7, 0xdc, 0xef, 0xdf, 0x17, 0x3e, 0x1b, 0x47, 0xf1, 0xec, 0x25, 0x51, 0x78, 0x85, 0x39, 0x65,
	0xe8, 0x7e, 0x0f, 0xbf, 0x82, 0x71, 0x14, 0xaf, 0x34, 0x17, 0x4b, 0x4c, 0x91, 0xde, 0xe2, 0x82,
	0xa4, 0x1b, 0xd4, 0xfe, 0x11, 0x1c, 0x4a, 0x54, 0x65, 0xa1, 0x03, 0x6f, 0xd2, 0x99, 0x8e, 0xc2,
	0xdf, 0x61, 0x14, 0xc5, 0xbf, 0x91, 0x82, 0x66, 0x44, 0xe3, 0x12, 0xdf, 0xf9, 0xa7, 0xd0, 0x2f,
	0x15, 0xca, 0x84, 0x91, 0x2d, 0xda, 0x37, 0x7d, 0xff, 0x04, 0x9e, 0x0a, 0xa2, 0xd4, 0x9f, 0x5c,
	0x66, 0x41, 0xc7, 0x56, 0xc6, 0x30, 0x20, 0x5a, 0x93, 0x74, 0x9d, 0x64, 0x44, 0x93, 0xe0, 0x6c,
	0xe2, 0x4d, 0x87, 0xa6, 0x98, 0x16, 0x14, 0x99, 0x4e, 0xf4, 0x9d, 0xc0, 0xe0, 0x7c, 0xe2, 0x4d,
	0x47, 0xe1, 0x3f, 0x5e, 0x0d, 0x40, 0x89, 0x36, 0x80, 0x31, 0x0c, 0x1c, 0xa9, 0x24, 0xe5, 0x19,
	0x5a, 0x8c, 0x91, 0x7f, 0x0e, 0xa3, 0xaa, 0xa8, 0xb4, 0xa4, 0xec, 0x26, 0xe8, 0x4e, 0xbc, 0x69,
	0xdf, 0xff, 0xa6, 0x6a, 0xa7, 0x2c, 0xe7, 0x41, 0x6f, 0xe2, 0x4d, 0x07, 0x97, 0x9f, 0xcc, 0xea,
	0x0b, 0x78, 0xab, 0x50, 0x46, 0x2c, 0xe7, 0xad, 0x34, 0xc3, 0xef, 0xcd, 0x62, 0x5e, 0xa3, 0xbe,
	0xc2, 0x5b, 0x9a, 0xe2, 0x35, 0xdf, 0x20, 0x33, 0xba, 0x8f, 0xe1, 0x89, 0x9b, 0x9b, 0x05, 0xde,
	0xa4, 0x3b, 0x1d, 0xb5, 0x37, 0x93, 0x96, 0x66, 0x25, 0xfc, 0xe7, 0x70, 0x6c, 0x9b, 0xb5, 0x29,
	0x38, 0x6a, 0x66, 0xc8, 0xe0, 0xf2, 0xf3, 0x16, 0x6a, 0xb6, 0xeb, 0x71, 0x7e, 0x17, 0xd0, 0x8f,
	0xe2, 0x25, 0x2f, 0x70, 0xe5, 0xec, 0xda, 0x12, 0xa5, 0x51, 0x56, 0x76, 0x45, 0x70, 0x12, 0xc5,
	0x6f, 0x58, 0x41, 0x19, 0xde, 0xab, 0x7c, 0x0e, 0x47, 0x16, 0x5c, 0x69, 0xa2, 0x93, 0x82, 0x2a,
	0x5d, 0x61, 0x7f, 0xd1, 0xc0, 0x76, 0x69, 0x31, 0x6d, 0x2b, 0x4d, 0x74, 0x78, 0x6b, 0x8c, 0x89,
	0xd5, 0x8d, 0x29, 0xdb, 0x39, 0x03, 0xe8, 0x52, 0xf1, 0x5d, 0x65, 0x89, 0xfd, 0xe3, 0xb2, 0xb2,
	0x7b, 0x08, 0x3d, 0xc1, 0xa5, 0x0e, 0xba, 0xd6, 0x98, 0x33, 0x18, 0x6e, 0xc9, 0x5f, 0x49, 0xca,
	0x19, 0x4b, 0x52, 0xa6, 0x83, 0xde, 0xae, 0x9a, 0x96, 0xf2, 0x7d, 0xf5, 0xc0, 0x56, 0x4f, 0xa1,
	0xbf, 0xe6, 0x4a, 0x3b, 0xb3, 0x0f, 0xcd, 0xb0, 0xf0, 0x0f, 0xf0, 0xa3, 0x78, 0xc7, 0xa2, 0x54,
	0x6f, 0x85, 0x09, 0x86, 0x59, 0xc5, 0xbd, 0x88, 0x52, 0x39, 0xb5, 0x0f, 0x3d, 0x71, 0x99, 0x98,
	0xd5, 0x23, 0x66, 0xf8, 0x1c, 0x5d, 0x7e, 0xda, 0xd0, 0x39, 0xb7, 0x2f, 0xae, 0xef, 0x04, 0x86,
	0x2f, 0xcc, 0xdd, 0x18, 0xac, 0x39, 0xd3, 0x0d, 0x20, 0x92, 0x6a, 0xca, 0xd9, 0x23, 0x40, 0x61,
	0x6a, 0xf6, 0xec, 0x16, 0xf6, 0x33, 0x4d, 0x37, 0x66, 0x44, 0x3d, 0x21, 0x2d, 0x6c, 0x3a, 0x1f,
	0x60, 0xe3, 0x6e, 0x8f, 0x28, 0xce, 0xdc, 0x22, 0xc3, 0x2b, 0xb8, 0xd8, 0x81, 0x2c, 0xe6, 0xbf,
	0xf0, 0x1b, 0xca, 0xdc, 0x4a, 0x7e, 0xe5, 0x9a, 0xe6, 0x77, 0xfb, 0x78, 0x67, 0x30, 0x2c, 0xcc,
	0xab, 0xdd, 0x92, 0x1c, 0x55, 0x34, 0x1a, 0x17, 0xa5, 0x5a, 0x5f, 0x73, 0x43, 0xd3, 0x64, 0x79,
	0x04, 0x07, 0x79, 0x41, 0xd4, 0xba, 0xf2, 0x72, 0x08, 0x3d, 0x9b, 0x2f, 0x67, 0x66, 0x3d, 0xab,
	0x36, 0x2f, 0xdd, 0x0f, 0x67, 0x35, 0x7c, 0xd5, 0x80, 0x51, 0xc2, 0x7f, 0x06, 0x27, 0xa2, 0x54,
	0xeb, 0xa4, 0x3a, 0xd3, 0x07, 0xd1, 0x6b, 0x2e, 0xc1, 0xf4, 0x2d, 0xed, 0xab, 0x30, 0xb6, 0x17,
	0x24, 0x79, 0x29, 0x5e, 0xa3, 0x5e, 0xad, 0x29, 0x16, 0x99, 0xa1, 0x7c, 0x02, 0x4f, 0x6f, 0x4c,
	0xf1, 0xbd, 0xda, 0x9a, 0x27, 0x8f, 0x1e, 0x64, 0xd9, 0x32, 0x4e, 0x89, 0x96, 0x71, 0x2f, 0xc0,
	0x57, 0xf6, 0xe7, 0x6a, 0x7b, 0x8e, 0x6e, 0xc7, 0xd2, 0xbd, 0x68, 0x5e, 0x8a, 0x7d, 0xe8, 0xcc,
	0x68, 0x87, 0xfd, 0xd7, 0x83, 0xd3, 0x28, 0x7e, 0x45, 0x0b, 0xbc, 0x96, 0x84, 0xa9, 0xdc, 0xed,
	0xfd, 0x0c, 0x86, 0xb9, 0xe4, 0xdb, 0xa4, 0x6e, 0x9b, 0x0f, 0xa0, 0x79, 0x52, 0x0f, 0xf2, 0x29,
	0xf4, 0x73, 0x5a, 0xa0, 0xbb, 0x8b, 0xae, 0xf5, 0x65, 0x57, 0x52, 0xf4, 0x6f, 0xac, 0x6e, 0xea,
	0x19, 0x80, 0x36, 0xe3, 0x93, 0xad, 0xf9, 0x2c, 0x1e, 0xd8, 0x7c, 0x7d, 0xd9, 0xe0, 0xba, 0xc3,
	0xb7, 0x5c, 0x4c, 0xca, 0x5a, 0xf9, 0xfe, 0xb7, 0xcf, 0x57, 0x89, 0xe6, 0x77, 0xf7, 0x3e, 0x65,
	0x35, 0x11, 0x9d, 0x16, 0x11, 0xdd, 0x7d, 0x11, 0x3d, 0xfb, 0x75, 0xae, 0x89, 0x38, 0x30, 0xff,
	0x01, 0x8c, 0x8f, 0x9a, 0xa8, 0x8d, 0x69, 0x3b, 0xb4, 0x6f, 0xea, 0xaa, 0x9e, 0x4c, 0xbc, 0x8f,
	0x56, 0x35, 0xde, 0x89, 0x72, 0x47, 0x14, 0x2d, 0x96, 0xf8, 0x2e, 0xfc, 0x61, 0xaf, 0xa8, 0x84,
	0xff, 0x2d, 0x0c, 0xa9, 0x48, 0x48, 0x96, 0xc9, 0x87, 0x31, 0x3d, 0x6f, 0xa0, 0x46, 0xe2, 0xc7,
	0x2c, 0x93, 0xe1, 0xd7, 0x26, 0x53, 0xf3, 0x35, 0xa6, 0x9b, 0xc5, 0xdc, 0x7d, 0x6b, 0xdf, 0xb0,
	0x62, 0xff, 0x1e, 0x5f, 0x76, 0x7e, 0xea, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x46, 0xf8, 0xcf,
	0xf8, 0x98, 0x07, 0x00, 0x00,
}
