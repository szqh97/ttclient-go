// Code generated by protoc-gen-go.
// source: IM.Group.proto
// DO NOT EDIT!

/*
Package IM_Group is a generated protocol buffer package.

It is generated from these files:
	IM.Group.proto

It has these top-level messages:
	IMNormalGroupListReq
	IMNormalGroupListRsp
	IMGroupInfoListReq
	IMGroupInfoListRsp
	IMGroupCreateReq
	IMGroupCreateRsp
	IMGroupChangeMemberReq
	IMGroupChangeMemberRsp
	IMGroupShieldReq
	IMGroupShieldRsp
	IMGroupChangeMemberNotify
*/
package IM_Group

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import IM_BaseDefine "../IM_BaseDefine"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IMNormalGroupListReq struct {
	// cmd id:			0x0401
	UserId           *uint32 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	AttachData       []byte  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMNormalGroupListReq) Reset()                    { *m = IMNormalGroupListReq{} }
func (m *IMNormalGroupListReq) String() string            { return proto.CompactTextString(m) }
func (*IMNormalGroupListReq) ProtoMessage()               {}
func (*IMNormalGroupListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IMNormalGroupListReq) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMNormalGroupListReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMNormalGroupListRsp struct {
	// cmd id:			0x0402
	UserId           *uint32                           `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	GroupVersionList []*IM_BaseDefine.GroupVersionInfo `protobuf:"bytes,2,rep,name=group_version_list" json:"group_version_list,omitempty"`
	AttachData       []byte                            `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *IMNormalGroupListRsp) Reset()                    { *m = IMNormalGroupListRsp{} }
func (m *IMNormalGroupListRsp) String() string            { return proto.CompactTextString(m) }
func (*IMNormalGroupListRsp) ProtoMessage()               {}
func (*IMNormalGroupListRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IMNormalGroupListRsp) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMNormalGroupListRsp) GetGroupVersionList() []*IM_BaseDefine.GroupVersionInfo {
	if m != nil {
		return m.GroupVersionList
	}
	return nil
}

func (m *IMNormalGroupListRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupInfoListReq struct {
	// cmd id:			0x0403
	UserId           *uint32                           `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	GroupVersionList []*IM_BaseDefine.GroupVersionInfo `protobuf:"bytes,2,rep,name=group_version_list" json:"group_version_list,omitempty"`
	AttachData       []byte                            `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *IMGroupInfoListReq) Reset()                    { *m = IMGroupInfoListReq{} }
func (m *IMGroupInfoListReq) String() string            { return proto.CompactTextString(m) }
func (*IMGroupInfoListReq) ProtoMessage()               {}
func (*IMGroupInfoListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IMGroupInfoListReq) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupInfoListReq) GetGroupVersionList() []*IM_BaseDefine.GroupVersionInfo {
	if m != nil {
		return m.GroupVersionList
	}
	return nil
}

func (m *IMGroupInfoListReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupInfoListRsp struct {
	// cmd id:			0x0404
	UserId           *uint32                    `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	GroupInfoList    []*IM_BaseDefine.GroupInfo `protobuf:"bytes,2,rep,name=group_info_list" json:"group_info_list,omitempty"`
	AttachData       []byte                     `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *IMGroupInfoListRsp) Reset()                    { *m = IMGroupInfoListRsp{} }
func (m *IMGroupInfoListRsp) String() string            { return proto.CompactTextString(m) }
func (*IMGroupInfoListRsp) ProtoMessage()               {}
func (*IMGroupInfoListRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *IMGroupInfoListRsp) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupInfoListRsp) GetGroupInfoList() []*IM_BaseDefine.GroupInfo {
	if m != nil {
		return m.GroupInfoList
	}
	return nil
}

func (m *IMGroupInfoListRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupCreateReq struct {
	// cmd id:			0x0405
	UserId           *uint32                  `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	GroupType        *IM_BaseDefine.GroupType `protobuf:"varint,2,req,name=group_type,enum=IM.BaseDefine.GroupType,def=2" json:"group_type,omitempty"`
	GroupName        *string                  `protobuf:"bytes,3,req,name=group_name" json:"group_name,omitempty"`
	GroupAvatar      *string                  `protobuf:"bytes,4,req,name=group_avatar" json:"group_avatar,omitempty"`
	MemberIdList     []uint32                 `protobuf:"varint,5,rep,name=member_id_list" json:"member_id_list,omitempty"`
	AttachData       []byte                   `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *IMGroupCreateReq) Reset()                    { *m = IMGroupCreateReq{} }
func (m *IMGroupCreateReq) String() string            { return proto.CompactTextString(m) }
func (*IMGroupCreateReq) ProtoMessage()               {}
func (*IMGroupCreateReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

const Default_IMGroupCreateReq_GroupType IM_BaseDefine.GroupType = IM_BaseDefine.GroupType_GROUP_TYPE_TMP

func (m *IMGroupCreateReq) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupCreateReq) GetGroupType() IM_BaseDefine.GroupType {
	if m != nil && m.GroupType != nil {
		return *m.GroupType
	}
	return Default_IMGroupCreateReq_GroupType
}

func (m *IMGroupCreateReq) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *IMGroupCreateReq) GetGroupAvatar() string {
	if m != nil && m.GroupAvatar != nil {
		return *m.GroupAvatar
	}
	return ""
}

func (m *IMGroupCreateReq) GetMemberIdList() []uint32 {
	if m != nil {
		return m.MemberIdList
	}
	return nil
}

func (m *IMGroupCreateReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupCreateRsp struct {
	// cmd id:			0x0406
	UserId           *uint32  `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	ResultCode       *uint32  `protobuf:"varint,2,req,name=result_code" json:"result_code,omitempty"`
	GroupId          *uint32  `protobuf:"varint,3,opt,name=group_id" json:"group_id,omitempty"`
	GroupName        *string  `protobuf:"bytes,4,req,name=group_name" json:"group_name,omitempty"`
	UserIdList       []uint32 `protobuf:"varint,5,rep,name=user_id_list" json:"user_id_list,omitempty"`
	AttachData       []byte   `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *IMGroupCreateRsp) Reset()                    { *m = IMGroupCreateRsp{} }
func (m *IMGroupCreateRsp) String() string            { return proto.CompactTextString(m) }
func (*IMGroupCreateRsp) ProtoMessage()               {}
func (*IMGroupCreateRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *IMGroupCreateRsp) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupCreateRsp) GetResultCode() uint32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *IMGroupCreateRsp) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupCreateRsp) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *IMGroupCreateRsp) GetUserIdList() []uint32 {
	if m != nil {
		return m.UserIdList
	}
	return nil
}

func (m *IMGroupCreateRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupChangeMemberReq struct {
	// cmd id:			0x0407
	UserId           *uint32                        `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	ChangeType       *IM_BaseDefine.GroupModifyType `protobuf:"varint,2,req,name=change_type,enum=IM.BaseDefine.GroupModifyType" json:"change_type,omitempty"`
	GroupId          *uint32                        `protobuf:"varint,3,req,name=group_id" json:"group_id,omitempty"`
	MemberIdList     []uint32                       `protobuf:"varint,4,rep,name=member_id_list" json:"member_id_list,omitempty"`
	AttachData       []byte                         `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *IMGroupChangeMemberReq) Reset()                    { *m = IMGroupChangeMemberReq{} }
func (m *IMGroupChangeMemberReq) String() string            { return proto.CompactTextString(m) }
func (*IMGroupChangeMemberReq) ProtoMessage()               {}
func (*IMGroupChangeMemberReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *IMGroupChangeMemberReq) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupChangeMemberReq) GetChangeType() IM_BaseDefine.GroupModifyType {
	if m != nil && m.ChangeType != nil {
		return *m.ChangeType
	}
	return IM_BaseDefine.GroupModifyType_GROUP_MODIFY_TYPE_ADD
}

func (m *IMGroupChangeMemberReq) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupChangeMemberReq) GetMemberIdList() []uint32 {
	if m != nil {
		return m.MemberIdList
	}
	return nil
}

func (m *IMGroupChangeMemberReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupChangeMemberRsp struct {
	// cmd id:			0x0408
	UserId           *uint32                        `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	ChangeType       *IM_BaseDefine.GroupModifyType `protobuf:"varint,2,req,name=change_type,enum=IM.BaseDefine.GroupModifyType" json:"change_type,omitempty"`
	ResultCode       *uint32                        `protobuf:"varint,3,req,name=result_code" json:"result_code,omitempty"`
	GroupId          *uint32                        `protobuf:"varint,4,req,name=group_id" json:"group_id,omitempty"`
	CurUserIdList    []uint32                       `protobuf:"varint,5,rep,name=cur_user_id_list" json:"cur_user_id_list,omitempty"`
	ChgUserIdList    []uint32                       `protobuf:"varint,6,rep,name=chg_user_id_list" json:"chg_user_id_list,omitempty"`
	AttachData       []byte                         `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *IMGroupChangeMemberRsp) Reset()                    { *m = IMGroupChangeMemberRsp{} }
func (m *IMGroupChangeMemberRsp) String() string            { return proto.CompactTextString(m) }
func (*IMGroupChangeMemberRsp) ProtoMessage()               {}
func (*IMGroupChangeMemberRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *IMGroupChangeMemberRsp) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupChangeMemberRsp) GetChangeType() IM_BaseDefine.GroupModifyType {
	if m != nil && m.ChangeType != nil {
		return *m.ChangeType
	}
	return IM_BaseDefine.GroupModifyType_GROUP_MODIFY_TYPE_ADD
}

func (m *IMGroupChangeMemberRsp) GetResultCode() uint32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *IMGroupChangeMemberRsp) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupChangeMemberRsp) GetCurUserIdList() []uint32 {
	if m != nil {
		return m.CurUserIdList
	}
	return nil
}

func (m *IMGroupChangeMemberRsp) GetChgUserIdList() []uint32 {
	if m != nil {
		return m.ChgUserIdList
	}
	return nil
}

func (m *IMGroupChangeMemberRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupShieldReq struct {
	// cmd id:			0x0409
	UserId           *uint32 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	GroupId          *uint32 `protobuf:"varint,2,req,name=group_id" json:"group_id,omitempty"`
	ShieldStatus     *uint32 `protobuf:"varint,3,req,name=shield_status" json:"shield_status,omitempty"`
	AttachData       []byte  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMGroupShieldReq) Reset()                    { *m = IMGroupShieldReq{} }
func (m *IMGroupShieldReq) String() string            { return proto.CompactTextString(m) }
func (*IMGroupShieldReq) ProtoMessage()               {}
func (*IMGroupShieldReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *IMGroupShieldReq) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupShieldReq) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupShieldReq) GetShieldStatus() uint32 {
	if m != nil && m.ShieldStatus != nil {
		return *m.ShieldStatus
	}
	return 0
}

func (m *IMGroupShieldReq) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupShieldRsp struct {
	// cmd id:			0x040a
	UserId           *uint32 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	GroupId          *uint32 `protobuf:"varint,2,req,name=group_id" json:"group_id,omitempty"`
	ResultCode       *uint32 `protobuf:"varint,3,req,name=result_code" json:"result_code,omitempty"`
	AttachData       []byte  `protobuf:"bytes,20,opt,name=attach_data" json:"attach_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IMGroupShieldRsp) Reset()                    { *m = IMGroupShieldRsp{} }
func (m *IMGroupShieldRsp) String() string            { return proto.CompactTextString(m) }
func (*IMGroupShieldRsp) ProtoMessage()               {}
func (*IMGroupShieldRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *IMGroupShieldRsp) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupShieldRsp) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupShieldRsp) GetResultCode() uint32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *IMGroupShieldRsp) GetAttachData() []byte {
	if m != nil {
		return m.AttachData
	}
	return nil
}

type IMGroupChangeMemberNotify struct {
	// cmd id: 			0x040b
	UserId           *uint32                        `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	ChangeType       *IM_BaseDefine.GroupModifyType `protobuf:"varint,2,req,name=change_type,enum=IM.BaseDefine.GroupModifyType" json:"change_type,omitempty"`
	GroupId          *uint32                        `protobuf:"varint,3,req,name=group_id" json:"group_id,omitempty"`
	CurUserIdList    []uint32                       `protobuf:"varint,4,rep,name=cur_user_id_list" json:"cur_user_id_list,omitempty"`
	ChgUserIdList    []uint32                       `protobuf:"varint,5,rep,name=chg_user_id_list" json:"chg_user_id_list,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *IMGroupChangeMemberNotify) Reset()                    { *m = IMGroupChangeMemberNotify{} }
func (m *IMGroupChangeMemberNotify) String() string            { return proto.CompactTextString(m) }
func (*IMGroupChangeMemberNotify) ProtoMessage()               {}
func (*IMGroupChangeMemberNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *IMGroupChangeMemberNotify) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *IMGroupChangeMemberNotify) GetChangeType() IM_BaseDefine.GroupModifyType {
	if m != nil && m.ChangeType != nil {
		return *m.ChangeType
	}
	return IM_BaseDefine.GroupModifyType_GROUP_MODIFY_TYPE_ADD
}

func (m *IMGroupChangeMemberNotify) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *IMGroupChangeMemberNotify) GetCurUserIdList() []uint32 {
	if m != nil {
		return m.CurUserIdList
	}
	return nil
}

func (m *IMGroupChangeMemberNotify) GetChgUserIdList() []uint32 {
	if m != nil {
		return m.ChgUserIdList
	}
	return nil
}

func init() {
	proto.RegisterType((*IMNormalGroupListReq)(nil), "IM.Group.IMNormalGroupListReq")
	proto.RegisterType((*IMNormalGroupListRsp)(nil), "IM.Group.IMNormalGroupListRsp")
	proto.RegisterType((*IMGroupInfoListReq)(nil), "IM.Group.IMGroupInfoListReq")
	proto.RegisterType((*IMGroupInfoListRsp)(nil), "IM.Group.IMGroupInfoListRsp")
	proto.RegisterType((*IMGroupCreateReq)(nil), "IM.Group.IMGroupCreateReq")
	proto.RegisterType((*IMGroupCreateRsp)(nil), "IM.Group.IMGroupCreateRsp")
	proto.RegisterType((*IMGroupChangeMemberReq)(nil), "IM.Group.IMGroupChangeMemberReq")
	proto.RegisterType((*IMGroupChangeMemberRsp)(nil), "IM.Group.IMGroupChangeMemberRsp")
	proto.RegisterType((*IMGroupShieldReq)(nil), "IM.Group.IMGroupShieldReq")
	proto.RegisterType((*IMGroupShieldRsp)(nil), "IM.Group.IMGroupShieldRsp")
	proto.RegisterType((*IMGroupChangeMemberNotify)(nil), "IM.Group.IMGroupChangeMemberNotify")
}

func init() { proto.RegisterFile("IM.Group.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0x87, 0x95, 0x3f, 0xc0, 0x38, 0x5d, 0xbb, 0x2a, 0x2d, 0x23, 0x80, 0x04, 0xd1, 0xae, 0x72,
	0x15, 0x09, 0xb8, 0x83, 0x5d, 0x0d, 0xd0, 0x88, 0x44, 0x46, 0x35, 0x0a, 0x12, 0x57, 0x96, 0x97,
	0x38, 0xad, 0x51, 0x13, 0x87, 0xd8, 0x19, 0xca, 0x23, 0xf0, 0x10, 0x5c, 0xf3, 0x0a, 0x3c, 0x05,
	0xcf, 0x84, 0xe2, 0xb4, 0xa8, 0x6d, 0x4e, 0x84, 0x84, 0xe0, 0x32, 0xf6, 0xb1, 0xbf, 0xdf, 0xf9,
	0x8e, 0x15, 0x18, 0x85, 0x51, 0x70, 0x5e, 0x8a, 0xaa, 0x08, 0x8a, 0x52, 0x28, 0xe1, 0x1c, 0x6c,
	0xbe, 0xef, 0x4f, 0xc2, 0x28, 0x38, 0xa3, 0x92, 0xbd, 0x64, 0x29, 0xcf, 0x59, 0xbb, 0x7d, 0x72,
	0x0a, 0xd3, 0x30, 0xba, 0x10, 0x65, 0x46, 0x57, 0xba, 0xea, 0x0d, 0x97, 0xea, 0x92, 0x7d, 0x76,
	0x8e, 0xe0, 0x56, 0x25, 0x59, 0x49, 0x78, 0xe2, 0x1a, 0x9e, 0xe9, 0x0f, 0x9d, 0x09, 0x0c, 0xa8,
	0x52, 0x34, 0x5e, 0x92, 0x84, 0x2a, 0xea, 0x4e, 0x3d, 0xc3, 0x3f, 0x3c, 0xa9, 0xb1, 0xd3, 0xb2,
	0xe8, 0x9e, 0x7e, 0x0e, 0xce, 0xa2, 0x29, 0x20, 0xd7, 0xac, 0x94, 0x5c, 0xe4, 0x64, 0xc5, 0xa5,
	0x72, 0x4d, 0xcf, 0xf2, 0x07, 0x4f, 0x1e, 0x05, 0xbb, 0xc1, 0xf4, 0x4d, 0x1f, 0xda, 0xba, 0x30,
	0x4f, 0x05, 0x8e, 0xfe, 0x02, 0x4e, 0x18, 0xe9, 0xd2, 0xa6, 0xa6, 0x37, 0xf6, 0xbf, 0x07, 0x67,
	0x5d, 0x30, 0xd6, 0xf1, 0x63, 0x38, 0x6a, 0xc1, 0x3c, 0x4f, 0xc5, 0x36, 0xd5, 0xc5, 0xa8, 0xfd,
	0xb8, 0x1f, 0x06, 0x8c, 0xd7, 0xbc, 0x17, 0x25, 0xa3, 0x8a, 0xa1, 0x6d, 0x9e, 0x02, 0xb4, 0x34,
	0x55, 0x17, 0xcc, 0x35, 0x3d, 0xd3, 0x1f, 0xe1, 0xa0, 0x79, 0x5d, 0xb0, 0x67, 0xa3, 0xf3, 0xcb,
	0xb7, 0xef, 0x67, 0x64, 0xfe, 0x71, 0xf6, 0x8a, 0xcc, 0xa3, 0x99, 0xe3, 0x6c, 0x4e, 0xe7, 0x34,
	0x63, 0xae, 0xe5, 0x99, 0xfe, 0x6d, 0x67, 0x0a, 0x87, 0xed, 0x1a, 0xbd, 0xa6, 0x8a, 0x96, 0xae,
	0xad, 0x57, 0x8f, 0x61, 0x94, 0xb1, 0xec, 0x4a, 0xa3, 0xdb, 0xa6, 0x6e, 0x78, 0x56, 0xdf, 0xeb,
	0xf8, 0xda, 0x89, 0x8e, 0x89, 0x9a, 0xc0, 0xa0, 0x64, 0xb2, 0x5a, 0x29, 0x12, 0x8b, 0xa4, 0xcd,
	0x3e, 0x74, 0xc6, 0x70, 0xb0, 0xb6, 0x97, 0xb8, 0x96, 0x67, 0xf8, 0xc3, 0xbd, 0x8c, 0xf6, 0x26,
	0xe3, 0xfa, 0xae, 0x3f, 0x66, 0xf9, 0x66, 0xc0, 0xf1, 0x26, 0xcb, 0x92, 0xe6, 0x0b, 0x16, 0xe9,
	0x36, 0x50, 0x99, 0x4f, 0x61, 0x10, 0xeb, 0x9a, 0x6d, 0x9b, 0x0f, 0x31, 0x9b, 0x91, 0x48, 0x78,
	0x5a, 0x37, 0x4e, 0xf7, 0x12, 0x37, 0xd7, 0x74, 0x5d, 0xd9, 0xfd, 0xf9, 0x7e, 0xf6, 0xe4, 0xc3,
	0x8c, 0xfd, 0x55, 0xbe, 0x3d, 0xcd, 0x56, 0x47, 0xb3, 0xad, 0x57, 0x5c, 0x18, 0xc7, 0x55, 0x49,
	0x10, 0xad, 0xcd, 0xce, 0x72, 0xb1, 0xbb, 0x73, 0xb3, 0xbf, 0x21, 0xfa, 0x7b, 0xf6, 0xef, 0x96,
	0x9c, 0xad, 0x12, 0xd4, 0xf4, 0x36, 0xbf, 0x1d, 0xfc, 0x1d, 0x18, 0x4a, 0x5d, 0x4f, 0xa4, 0xa2,
	0xaa, 0x92, 0xeb, 0xa0, 0x28, 0x82, 0xec, 0x23, 0x30, 0x59, 0x5d, 0x04, 0x6a, 0x02, 0x05, 0x7c,
	0x37, 0xe0, 0x1e, 0x32, 0x94, 0x0b, 0xa1, 0x78, 0x5a, 0xff, 0xb7, 0x77, 0x83, 0x8d, 0xc0, 0xee,
	0x1d, 0x81, 0x1e, 0xce, 0xd9, 0x03, 0xb8, 0x1b, 0x8b, 0x2c, 0xc8, 0xc4, 0xa2, 0xfa, 0xc4, 0x59,
	0xa0, 0x54, 0xfb, 0x7b, 0xbf, 0xaa, 0xd2, 0xd7, 0xd6, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x43,
	0x31, 0x1e, 0xf4, 0x13, 0x06, 0x00, 0x00,
}
